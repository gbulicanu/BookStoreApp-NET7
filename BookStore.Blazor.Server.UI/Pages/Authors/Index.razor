@page "/authors/"

@inject IAuthorService authors
@inject IJSRuntime js

<h3>Authors</h3>

@if (response.Success == false)
{
    <div class="alert alert-danger">
        <h4>@response.Message</h4>
    </div>
}
@if (this.Authors is null)
{
    <div class="alert alert-info">
        <h4>Loading data...</h4>
    </div>
}
else
{
    <AuthorizeView Roles="@Roles.Administrator">
        <a class="btn btn-dark" href="/authors/create"><span class="oi oi-plus"></span> Create</a>
    </AuthorizeView>
    <br />
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var author in this.Authors)
            {
                <tr>
                    <td>@author.FirstName</td>
                    <td>@author.LastName</td>
                    <td>
                        <a class="btn btn-primary" href="/authors/details/@author.Id"><span class="oi oi-book" aria-hidden="true"></span> Details</a>
                        <AuthorizeView Roles="@Roles.Administrator">
                            <a class="btn btn-warning" href="/authors/edit/@author.Id"><span class="oi oi-pencil" aria-hidden="true"></span> Edit</a>
                            <button class="btn btn-danger" @onclick=@(() => Delete(author.Id))><span class="oi oi-delete" aria-hidden="true"></span> Delete</button>
                        </AuthorizeView>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    }

    @code {
private List<AuthorDto> Authors = null!;
    private Response<List<AuthorDto>> response = new Response<List<AuthorDto>> { Success = true };

    protected override async Task OnInitializedAsync()
    {
        response = await authors.GetAuthors();
        if (response.Success)
        {
            Authors = response.Data;
        }
    }

    private async Task Delete(int id)
    {
        var author = Authors.First(x => x.Id == id);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Are you sure you want to delete {author.FirstName} {author.LastName}?");

        if (confirm)
        {
            var response = await authors.DeleteAuthor(id);
            if (response.Success)
            {
                await OnInitializedAsync();
            }
        }
    }
    }

